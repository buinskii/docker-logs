input { 
    tcp {
        port => 5140
        type => docker
        codec => multiline {
            pattern => "^<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])? NDL:"
            negate => "true"
            what => "previous"
        }
    }
} 
filter {
  if [type] == "docker" {
    grok {
        patterns_dir => "/etc/logstash/conf.d/patterns"
        match => { "message" => "<%{POSINT:priority}>%{SYSLOGTIMESTAMP:sourceTimestamp} %{DATA:program}(?:\[%{POSINT:pid}\])?: (?:NDL: )?(?:%{NDLLEVEL:level}: )?(?:\[%{NDLTAGS:syslog_tags}\]: )?%{GREEDYDATA:syslog_message}" }
    }
    grok {
        patterns_dir => "/etc/logstash/conf.d/patterns"
        match => { "program" => "docker/%{NDLDOCKERIMAGE:containerImage}/%{NDLDOCKERCONTAINER:containerName}/%{NDLDOCKERCONTAINERID:containerId}" }
    }
    mutate {
        split => { "syslog_tags" => "," }
        merge => { "tags" => "syslog_tags" }
        gsub => [
            "syslog_message", "<\b(?:[1-9][0-9]*)\b>\b(?:[Jj]an(?:uary|uar)?|[Ff]eb(?:ruary|ruar)?|[Mm](?:a|Ã¤)?r(?:ch|z)?|[Aa]pr(?:il)?|[Mm]a(?:y|i)?|[Jj]un(?:e|i)?|[Jj]ul(?:y)?|[Aa]ug(?:ust)?|[Ss]ep(?:tember)?|[Oo](?:c|k)?t(?:ober)?|[Nn]ov(?:ember)?|[Dd]e(?:c|z)(?:ember)?)\b +(?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9]) (?!<[0-9])(?:2[0123]|[01]?[0-9]):(?:[0-5][0-9])(?::(?:(?:[0-5]?[0-9]|60)(?:[:.,][0-9]+)?))(?![0-9]) .*?(?:\[\b(?:[1-9][0-9]*)\b\])?: ", ""
        ]
    }
    mutate {
        update => {
            "message" => "%{syslog_message}"
            "program" => "docker"
        }
        remove_field => [
            "syslog_tags",
            "syslog_message"
        ]
    }
  }
}
output { 
    elasticsearch {
        hosts => ["elastic:9200"]
    }
}